#
# Noctis Obscuro - a shell theme based on the VS Code theme of the same name

version = "1.0.0"
name = "Noctis Obscuro"

# styles defined here use the syntax of the python rich library

[styles]
background =  "#031417"
foreground =  "#b2cacd"

# styles for text and the highlighted or current line
text = "#b2cacd on #031417"
current_line =  "#b2cacd on #073a41"

# other colors from the palette
grey = "#5b858b" # comment
pink = "#df769b"  # keyword
light_orange = "#e4b781" # variable
salmon = "#d67e5c" # annotation
orange = "#d5971a" # constant
#dark_orange = "#e66533" # tag
dark_orange = "#ff6c1c" # from starship
bright_green = "#99e343 bold" # from starship
light_green = "#49e9A6 bold" # string
medium_green = "#16b673" # string_interpolated
purple = "#7060eb" # number
blue_grey = "#16a3b6" # function
#cyan = "#49d6e9" # support
cyan = "#09ecff" # from starship
cornflower_blue = "#49ace9" # misc
hot_purple = "#f504f5" # cursor

[scopes.iterm]
agent = "iterm"
#style.foreground = "foreground"
#style.background = "background"

[scopes.gnu_ls]
agent = "gnu_ls"
# clear all builtin styles
# clear_builtin = true

# set the style to use for each file type sequence matters here, the last thing to
# match is the style that is applied. so if you put executable_file after setuid and
# you have a file that is both, then the executable_file style will be the one that
# shows up
styles.text = "default" # for non filename text
styles.file = "orange"
styles.directory = "blue_grey"
styles.symlink = "purple"
#style.multi_hard_link = "bold sea_green2"
# empty style is ignored, not rendered as 'default'
styles.pipe = "pink"
styles.socket = "pink"
#style.door = ""
styles.block_device = "pink"
styles.character_device = "pink"
#style.broken_symlink = ""
#style.missing_symlink_target = ""
#style.setuid = ""
#style.setgid = ""
#style.sticky = ""
#style.other_writable = ""
#style.sticky_other_writable = ""
styles.executable_file = "medium_green"
#style.file_with_capability = ""

[scopes.eza]
agent = "eza"
environment_variable = "EZA_COLORS"
# clear all builtin styles
clear_builtin = true

# set the style to use for each file type sequence matters here, the last thing to
# match is the style that is applied. so if you put executable_file after setuid and
# you have a file that is both, then the executable_file style will be the one that
# shows up
styles.file = "default"
styles.directory = "blue_grey"
styles.symlink = "light_green"
#styles.multi_hard_link = "bold sea_green2"
# empty style is ignored, not rendered as 'default'
styles.pipe = "pink"
styles.socket = "pink"
#styles.door = ""
styles.block_device = "pink"
styles.character_device = "pink"
#styles.broken_symlink = ""
#styles.missing_symlink_target = ""
#styles.setuid = ""
#styles.setgid = ""
#styles.sticky = ""
#styles.other_writable = ""
#styles.sticky_other_writable = ""
styles.executable_file = "medium_green"
#styles.file_with_capability = ""
# permissions
styles.perms_user_read = "grey"
styles.perms_user_write = "grey"
styles.perms_user_execute_files = "grey"
styles.perms_user_execute_directories = "grey"
styles.perms_suid_files = "pink"
styles.perms_sticky_directories = "pink"
styles.perms_group_read = "grey"
styles.perms_group_write = "grey"
styles.perms_group_execute = "grey"
styles.perms_other_read = "grey"
styles.perms_other_write = "pink"
styles.perms_other_execute = "grey"
styles.perms_extended_attribute = "blue_grey"
# user and group
styles.uu = "medium_green"
styles.un = "medium_green"
styles.gu = "medium_green"
styles.gn = "medium_green"
# size number and size unit
styles.size_number = "purple"
styles.size_unit = "purple"
# date/time
styles.date_time = "cornflower_blue"
# dashes on perms and size
styles.punctuation = "grey"

#[scopes.gum]
#environment.export.GUM_OPTS = " --cursor-foreground={dark_orange}"

[scopes.fzf-default]
agent = "fzf"
environment_variable = "FZF_DEFAULT_OPTS"
# the base color scheme from fzf to use
colorbase = "dark"

opts.--pointer = "➤"
opts.--marker = "✓"
opts.--prompt = "🔍〙"
opts.--bind = "ctrl-v:page-down,alt-v:page-up,ctrl-d:delete-char,ctrl-k:kill-line,ctrl-u:unix-line-discard,ctrl-j:ignore"
#opts.--scrollbar = "⭥"
#opts.--scrollbar = "⇕"
#opts.--scrollbar = "⬧"
opts.--scrollbar = "▐"
opts.--no-mouse = true

# these generate --color options for fzf
styles.text = "text"
styles.current-line = "current_line"
styles.label = "cyan"
styles.border = "dark_orange"
styles.info = "purple"
styles.prompt = "cyan"
styles.pointer = "bright_green"
styles.marker = "cyan"
styles.scrollbar = "cornflower_blue"
styles.query = "pink"
styles.hl = "pink"
styles."hl+" = "pink"
styles.spinner = "bright_green"
styles.header = "medium_green"
# no color for the gutter
styles.gutter = "default"

[scopes.fdirs]
# settings for aliases in fdirs, which uses fzf
# fdirs adds FZF_DEFAULT_OPTS and then FDIRS_FZF_OPTS to the command line
# before executing fzf, so you can override here anything from [scopes.fzf]
agent = "fzf"
environment_variable = "FDIRS_FZF_OPTS"

opts.--border = "rounded"
opts.--info = "hidden"
opts.--no-sort = true
opts."+i" = true
opts.--height = "~40%"
opts.--layout = "reverse-list"

styles.gutter = "default"


[scopes.bash-control-r]
# fzf comes with an ancillary file that rebinds Control-R to a fzf powered
# history search. that script adds FZF_DEFAULT_OPTS to the command line before
# executing fzf. then it adds FZF_CTRL_R_OPTS to the command line. because
# fzf has a last-option-on-the-command-line-wins logic flow, it means
# that Control-R inherits any fzf options set in FZF_DEFAILT_OPTS
agent = "fzf"
environment_variable = "FZF_CTRL_R_OPTS"

opts.--border = "rounded"
opts.--border-label = "command history"
opts.--border-label-pos = "3"
opts.--info = "inline:〘"
opts.--no-separator = true
#opts.--no-scrollbar = true

styles.gutter = "default"


[scopes.fzf-cd]
# set options for the c command included with fzf
agent = "fzf"
environment_variable = "FZF_CD_OPTS"

opts.--border-label = "change directory to:"
opts.--border-label-pos = "3"
opts.--height = "~60%"
opts.--layout = "reverse-list"
opts.--info = "inline:〘"
opts.--no-separator = true

styles.gutter = "default"

[scopes.fzf-cd-command]
# set the find command used by fzf_cd to exclude
# a bunch of directories
agent = "environment_variables"
export.FZF_CD_COMMAND = """\
    command find -L . -mindepth 1 \
    \\( \
        -fstype 'sysfs' \
        -o -fstype 'devfs' \
        -o -fstype 'devtmpfs' \
        -o -fstype 'proc' \
        -o -name '.rvm' \
        -o -name '.pyenv' \
        -o -name '.git' \
        -o -name '.vscode' \
        -o -name 'Library' \
    \\) -prune \
    -o -type d -print \
    2> /dev/null | cut -b3-
"""

export.FZF_SELECT_CURRENT_COMMAND = """\
    command find -LE . -mindepth 1 \
    \\( \
        -fstype 'sysfs' \
        -o -fstype 'devfs' \
        -o -fstype 'devtmpfs' \
        -o -fstype 'proc' \
        -o -name '.rvm' \
        -o -name '.pyenv' \
        -o -name '.git' \
        -o -name '.vscode' \
        -o -name 'Library' \
        -o -iregex '.*\\.(app|pkg|photoslibrary)$' \
    \\) -prune \
    -o -type f -print -o -type d -print -o -type l -print \
    2> /dev/null | cut -b3- \
    """

# the nasty quoting mess around the sed command is because I need
# double quotes around the sed substitution command, and shell-themer
# generates the export command with double quotes around the whole thing
# that mess of single and double quotes lets me use a single quote to
# enclose a double quote, which when interpreted by the
#     eval $(shell-themer generate)
# command, let's the double quote mark end up inside the environment varialbe
# so that when the contents of the environment variable get executed
# the double quote mark still lets $HOME get expanded, but lets the sed
# command think it has one argument.
# messy, but it works.
export.FZF_SELECT_HOME_COMMAND = """\
    command find -LE ~ -mindepth 1 \
    \\( \
        -fstype 'sysfs' \
        -o -fstype 'devfs' \
        -o -fstype 'devtmpfs' \
        -o -fstype 'proc' \
        -o -name '.rvm' \
        -o -name '.pyenv' \
        -o -name '.git' \
        -o -name '.vscode' \
        -o -name 'Library' \
        -o -iregex '.*\\.(app|pkg|photoslibrary)$' \
    \\) -prune \
    -o -type f -print -o -type d -print -o -type l -print \
    2> /dev/null | sed "'"'"s|^$HOME|~|"'"'" \
    """


[scopes.fzf-select]
# set options for the fzf commands that find a directory/file
agent = "fzf"
environment_variable = "FZF_SELECT_OPTS"

opts.--border = "rounded"
opts.--border-label = "select file:"
opts.--border-label-pos = "3"
opts.--height = "~60%"
opts.--layout = "reverse-list"
opts.--info = "inline:〘"
opts.--no-separator = true

styles.gutter = "default"


[scopes.theme-activate]
# for the theme-activate alias that's part of shell-themer
agent = "fzf"
environment_variable = "THEME_FZF_OPTS"

opts.--border = "rounded"
opts.--border-label = "activate theme:"
opts.--border-label-pos = "3"
opts.--info = "hidden"
opts.--no-sort = true
opts.--layout = "reverse-list"
opts."+i" = true
opts.--height = "~40%"

styles.gutter = "default"


# set up ls
#[scopes.ls]
#environment.export.LS_COLORS='rs=0:di=01;38;2;189;147;249:ln=01;38;2;139;233;253:mh=00:pi=48;2;33;34;44;38;2;241;250;140:so=01;38;2;255;121;198:do=01;38;2;255;121;198:bd=48;2;33;34;44;38;2;241;250;140;01:cd=48;2;33;34;44;38;2;241;250;140;01:or=48;2;33;34;44;38;2;255;85;85;01:mi=00:su=38;2;248;248;242;48;2;255;85;85:sg=38;2;33;34;44;48;2;241;250;140:ca=00:tw=38;2;33;34;44;48;2;80;250;123:ow=38;2;189;147;249;48;2;80;250;123:st=38;2;248;248;242;48;2;189;147;249:ex=01;38;2;80;250;123:*.tar=01;38;2;255;85;85:*.tgz=01;38;2;255;85;85:*.arc=01;38;2;255;85;85:*.arj=01;38;2;255;85;85:*.taz=01;38;2;255;85;85:*.lha=01;38;2;255;85;85:*.lz4=01;38;2;255;85;85:*.lzh=01;38;2;255;85;85:*.lzma=01;38;2;255;85;85:*.tlz=01;38;2;255;85;85:*.txz=01;38;2;255;85;85:*.tzo=01;38;2;255;85;85:*.t7z=01;38;2;255;85;85:*.zip=01;38;2;255;85;85:*.z=01;38;2;255;85;85:*.dz=01;38;2;255;85;85:*.gz=01;38;2;255;85;85:*.lrz=01;38;2;255;85;85:*.lz=01;38;2;255;85;85:*.lzo=01;38;2;255;85;85:*.xz=01;38;2;255;85;85:*.zst=01;38;2;255;85;85:*.tzst=01;38;2;255;85;85:*.bz2=01;38;2;255;85;85:*.bz=01;38;2;255;85;85:*.tbz=01;38;2;255;85;85:*.tbz2=01;38;2;255;85;85:*.tz=01;38;2;255;85;85:*.deb=01;38;2;255;85;85:*.rpm=01;38;2;255;85;85:*.jar=01;38;2;255;85;85:*.war=01;38;2;255;85;85:*.ear=01;38;2;255;85;85:*.sar=01;38;2;255;85;85:*.rar=01;38;2;255;85;85:*.alz=01;38;2;255;85;85:*.ace=01;38;2;255;85;85:*.zoo=01;38;2;255;85;85:*.cpio=01;38;2;255;85;85:*.7z=01;38;2;255;85;85:*.rz=01;38;2;255;85;85:*.cab=01;38;2;255;85;85:*.wim=01;38;2;255;85;85:*.swm=01;38;2;255;85;85:*.dwm=01;38;2;255;85;85:*.esd=01;38;2;255;85;85:*.avif=01;38;2;255;121;198:*.jpg=01;38;2;255;121;198:*.jpeg=01;38;2;255;121;198:*.mjpg=01;38;2;255;121;198:*.mjpeg=01;38;2;255;121;198:*.gif=01;38;2;255;121;198:*.bmp=01;38;2;255;121;198:*.pbm=01;38;2;255;121;198:*.pgm=01;38;2;255;121;198:*.ppm=01;38;2;255;121;198:*.tga=01;38;2;255;121;198:*.xbm=01;38;2;255;121;198:*.xpm=01;38;2;255;121;198:*.tif=01;38;2;255;121;198:*.tiff=01;38;2;255;121;198:*.png=01;38;2;255;121;198:*.svg=01;38;2;255;121;198:*.svgz=01;38;2;255;121;198:*.mng=01;38;2;255;121;198:*.pcx=01;38;2;255;121;198:*.mov=01;38;2;255;121;198:*.mpg=01;38;2;255;121;198:*.mpeg=01;38;2;255;121;198:*.m2v=01;38;2;255;121;198:*.mkv=01;38;2;255;121;198:*.webm=01;38;2;255;121;198:*.webp=01;38;2;255;121;198:*.ogm=01;38;2;255;121;198:*.mp4=01;38;2;255;121;198:*.m4v=01;38;2;255;121;198:*.mp4v=01;38;2;255;121;198:*.vob=01;38;2;255;121;198:*.qt=01;38;2;255;121;198:*.nuv=01;38;2;255;121;198:*.wmv=01;38;2;255;121;198:*.asf=01;38;2;255;121;198:*.rm=01;38;2;255;121;198:*.rmvb=01;38;2;255;121;198:*.flc=01;38;2;255;121;198:*.avi=01;38;2;255;121;198:*.fli=01;38;2;255;121;198:*.flv=01;38;2;255;121;198:*.gl=01;38;2;255;121;198:*.dl=01;38;2;255;121;198:*.xcf=01;38;2;255;121;198:*.xwd=01;38;2;255;121;198:*.yuv=01;38;2;255;121;198:*.cgm=01;38;2;255;121;198:*.emf=01;38;2;255;121;198:*.ogv=01;38;2;255;121;198:*.ogx=01;38;2;255;121;198:*.aac=00;38;2;139;233;253:*.au=00;38;2;139;233;253:*.flac=00;38;2;139;233;253:*.m4a=00;38;2;139;233;253:*.mid=00;38;2;139;233;253:*.midi=00;38;2;139;233;253:*.mka=00;38;2;139;233;253:*.mp3=00;38;2;139;233;253:*.mpc=00;38;2;139;233;253:*.ogg=00;38;2;139;233;253:*.ra=00;38;2;139;233;253:*.wav=00;38;2;139;233;253:*.oga=00;38;2;139;233;253:*.opus=00;38;2;139;233;253:*.spx=00;38;2;139;233;253:*.xspf=00;38;2;139;233;253:*~=00;38;2;98;114;164:*#=00;38;2;98;114;164:*.bak=00;38;2;98;114;164:*.old=00;38;2;98;114;164:*.orig=00;38;2;98;114;164:*.part=00;38;2;98;114;164:*.rej=00;38;2;98;114;164:*.swp=00;38;2;98;114;164:*.tmp=00;38;2;98;114;164:*.dpkg-dist=00;38;2;98;114;164:*.dpkg-old=00;38;2;98;114;164:*.ucf-dist=00;38;2;98;114;164:*.ucf-new=00;38;2;98;114;164:*.ucf-old=00;38;2;98;114;164:*.rpmnew=00;38;2;98;114;164:*.rpmorig=00;38;2;98;114;164:*.rpmsave=00;38;2;98;114;164:'
